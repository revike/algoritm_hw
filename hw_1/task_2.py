"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генератор списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

# 1.


def search_min_1(list_val):
    result = list_val[0]
    i = 0
    while i < len(list_val):
        if list_val[i] < result:
            result = list_val[i]
        i += 1
    return result


# Скорее это правильно
def search_min_1_1(list_val):
    result = list_val[0]
    j = 0
    for i in list_val:
        while j < len(list_val):
            if result > list_val[j]:
                result = list_val[j]
            j += 1
    return result

# 2.


def search_min_2(list_values):
    return min(list_values)


#####################################
list_val = [k for k in range(-1000000, 1000000) if k % 17 == 0]
print(search_min_1(list_val))
print(search_min_1_1(list_val))
print(search_min_2(list_val))
