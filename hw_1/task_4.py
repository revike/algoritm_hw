"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

data_base = {
    'john': {'qwerty': 0},
    'jick': {'sdffv': 1},
    'mike': {'qwetjjrty': 0},
    'revike': {'qwasdereerty': 1},
    'kris': {'sbfghd': 0},
    'team': {'qwertfsf4y': 1},
    'anton': {'32rtgf': 0},
    'rich': {'t45g5gd': 1},
}

# 1. O(n*2)
def authentication(data_base, login, password):
    if login.lower() in data_base.keys():  # O(n)
        if password in data_base[login.lower()] and data_base[login.lower()][password] == 1: # O(n)
            return True
        elif password in data_base[login.lower()] and data_base[login.lower()][password] == 0:
            print('Активируйте учетную запись!')
        else:
            return False
    else:
        return False


# 2. O(n) - Это решение эффективнее
def authentication_2(data_base, login, password):
    if login.lower() in data_base.keys():  # O(n)
        try:
            if data_base[login.lower()][password] == 1:
                return True
            elif data_base[login.lower()][password] == 0:
                print('Активируйте учетную запись!')
        except KeyError:
            print('Неверный логин или пароль_2')
    else:
        return False


login = input('Введите логин: ')
password = input('Введите пароль: ')


entrance = authentication(data_base, login, password)
entrance_2 = authentication_2(data_base, login, password)

if entrance:
    print('Вход выполнен!')
elif entrance == False:
    print('Неверный логин или пароль_1')

if entrance_2:
    print('Вход выполнен!')
elif entrance_2 == False:
    print('Неверный логин или пароль_2')


"""
придумайте 1-3 решения (желательно хотя бы два)

Для меня это как то странно.. Если моя тупоголовка придумала одно решение, то все, на этом вопрос закрыт))
Второе могу только найти в интернете или у кого нить спросить)
Пытаюсь делать другим способом и он все равно выходит как и первый..
"""
