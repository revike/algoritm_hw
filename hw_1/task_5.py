"""
Задание 6.
Задание на закрепление навыков работы со стеком

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях
"""


class StackClass:
    def __init__(self):
        self.elems = []

    def is_empty(self):
        """стек"""
        return self.elems == []

    def push_in(self, el):
        """Предполагаем, что верхний элемент стека находится в конце списка"""
        self.elems.append(el)

    def pop_out(self):
        """убираем элемент с вершины стека и возвращаем его значение"""
        return self.elems.pop()


if __name__ == '__main__':
    sc_obj = StackClass()


def stacks(value_plates):
    sc_obj = StackClass()
    result = ''
    while value_plates:
        sc_obj.push_in('t_' + str(value_plates) + ' ')
        value_plates -= 1
        result += str(sc_obj.pop_out())
        if value_plates % 10 == 0:
            print(result)
            result = ''


stacks(123)
